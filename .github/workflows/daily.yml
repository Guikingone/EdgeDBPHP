name: Daily
on:
  schedule:
    - cron: "0 0 * * *"
jobs:
  edgedb:
    name: PHP ${{ matrix.php-versions }} - ${{ matrix.composer-dependencies }} dependencies | EdgeDB ${{ matrix.edgedb-version }}
    # https://hub.docker.com/_/ubuntu/
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: true
      matrix:
        php-versions: ['7.4', '8.0']
        composer-dependencies: ['highest', 'lowest']
        edgedb-version: ['stable', 'nightly']
    steps:
      # https://github.com/actions/checkout (official)
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install edgedb server
        uses: edgedb/setup-edgedb@v1
        with:
          server-version: ${{ matrix.edgedb-version }}

      # https://github.com/shivammathur/setup-php (community)
      - name: Setup PHP, extensions and composer with shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: zip, xdebug
          coverage: xdebug
        env:
          update: true

      # —— Composer️ —————————————————————————————————————————————————————
      - name: Validate composer.json and composer.lock
        run: composer validate

      # —— Security ——————————————————————————————————————————————————————
      - name: Symfony Security Checker
        uses: symfonycorp/security-checker-action@v2

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ matrix.composer-dependencies }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-${{ matrix.composer-dependencies }}-

      - name: Install Composer dependencies
        if: matrix.composer-dependencies == ''
        run: composer update --no-suggest

      - name: Install Composer dependencies - Lowest
        if: matrix.composer-dependencies == 'lowest'
        run: composer update --no-suggest --prefer-lowest

      # —— Style —————————————————————————————————————————————————————————
      - name: PHP-CS-FIXER
        uses: docker://oskarstark/php-cs-fixer-ga
        with:
          args: --dry-run .

      # —— PHPUnit ———————————————————————————————————————————————————————
      - name: PHPUnit
        run: php vendor/bin/phpunit tests

      # —— Infection —————————————————————————————————————————————————————
      - name: Infection
        run: php vendor/bin/infection --no-progress --min-covered-msi=100 --min-msi=100
